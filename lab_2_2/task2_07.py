# 7) Сортированный список

# Реализуйте функцию merge_sorted_list, которая принимает два отсортированных списка,
# и возвращает новый отсортированный список, содержащий элементы из обоих списков.

def merge_sorted_list(list1, list2): # принимает два отсортированных списка и возвращает один объединённый, тоже отсортированный
    i, j = 0, 0 # i — для list1, j — для list2
    merged = [] # результирующий список, туда поочерёдно добавлять элементы

    while i < len(list1) and j < len(list2): # пока не дойдёт до конца хотя бы одного списка
        if list1[i] <= list2[j]: # сравнивает элементы двух списков
            merged.append(list1[i]) # добавляет меньший или равный элемент из list1
            i += 1
        else:
            merged.append(list2[j]) # иначе добавляет элемент из list2
            j += 1                   # двигает указатель j вперёд

    merged.extend(list1[i:]) # добавляет оставшиеся элементы из list1, если есть
    merged.extend(list2[j:]) # добавляет оставшиеся элементы из list2, если есть
#                 list1[i:] — от текущего i до конца
#                 extend(...) — добавляет сразу несколько элементов
    return merged


a = [1, 3, 5, 7]
b = [2, 4, 6, 8, 10]

result = merge_sorted_list(a, b)
print(result)



